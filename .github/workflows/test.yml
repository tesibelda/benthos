name: Test

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0/2 * * *' # Every two hours

jobs:
  cross-build:
    if: ${{ github.repository == 'benthosdev/benthos' || github.event_name != 'schedule' }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.18.x, 1.19.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      CGO_ENABLED: 0
    steps:

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        version: latest
        args: build --snapshot --timeout 60m

  test:
    if: ${{ github.repository == 'benthosdev/benthos' || github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
        check-latest: true

    - name: Checkout code
      uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Deps
      run: make deps && git diff-index --quiet HEAD || { >&2 echo "Stale go.{mod,sum} detected. This can be fixed with 'make deps'."; exit 1; }

    - name: Docs
      run: make docs && git diff-index --quiet HEAD || { >&2 echo "Stale docs detected. This can be fixed with 'make docs'."; exit 1; }

    - name: Test
      run: make test

  golangci-lint:
    if: ${{ github.repository == 'benthosdev/benthos' || github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
        check-latest: true

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout 30m cmd/... internal/... public/...

    # TODO: Remove this after https://github.com/golangci/golangci-lint/issues/3094 is addressed
    # - name: Get govulncheck
    #   run: go install golang.org/x/vuln/cmd/govulncheck@latest

    # - name: Run govulncheck
    #   run: govulncheck ./...
